# Generated by Django 5.2 on 2025-07-26 10:04

import accounts.models
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Allergy',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='이름')),
                ('description', models.TextField(blank=True, verbose_name='설명')),
            ],
            options={
                'verbose_name': '알레르기',
                'verbose_name_plural': '알레르기 목록',
            },
        ),
        migrations.CreateModel(
            name='ChronicDisease',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='이름')),
                ('description', models.TextField(blank=True, verbose_name='설명')),
            ],
            options={
                'verbose_name': '지병',
                'verbose_name_plural': '지병 목록',
            },
        ),
        migrations.CreateModel(
            name='Medication',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='이름')),
                ('description', models.TextField(blank=True, verbose_name='설명')),
            ],
            options={
                'verbose_name': '복용 약물',
                'verbose_name_plural': '복용 약물 목록',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='이메일')),
                ('nickname', models.CharField(max_length=30, unique=True, verbose_name='닉네임')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='생년월일')),
                ('gender', models.CharField(blank=True, choices=[('M', '남'), ('F', '여'), ('O', '기타')], max_length=10, null=True, verbose_name='성별')),
                ('health_goals', models.CharField(blank=True, max_length=255, verbose_name='건강 목표')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('allergies', models.ManyToManyField(blank=True, to='accounts.allergy', verbose_name='알레르기')),
                ('chronic_diseases', models.ManyToManyField(blank=True, to='accounts.chronicdisease', verbose_name='지병')),
                ('medications', models.ManyToManyField(blank=True, to='accounts.medication', verbose_name='복용 약물')),
            ],
            options={
                'verbose_name': '사용자',
                'verbose_name_plural': '사용자 목록',
            },
            managers=[
                ('objects', accounts.models.UserManager()),
            ],
        ),
    ]
