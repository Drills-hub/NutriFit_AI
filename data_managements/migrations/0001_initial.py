# Generated by Django 5.2 on 2025-08-01 05:16

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DietarySupplements',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('report_number', models.CharField(help_text='인증번호 (제품 고유 식별자)', max_length=255, unique=True)),
                ('name', models.CharField(help_text='제품명', max_length=255)),
                ('registration_date', models.DateField(blank=True, help_text='등록일자', null=True)),
                ('appearance', models.TextField(blank=True, help_text='성상')),
                ('usage_instructions', models.TextField(blank=True, help_text='용도 및 용법')),
                ('serving_size', models.CharField(blank=True, help_text='섭취량', max_length=100)),
                ('serving_method', models.TextField(blank=True, help_text='섭취 방법')),
                ('shelf_life', models.CharField(blank=True, help_text='유통기한', max_length=255)),
                ('storage_method', models.TextField(blank=True, help_text='보존방법')),
                ('precautions', models.TextField(blank=True, help_text='섭취시 주의사항')),
                ('main_functionality', models.TextField(blank=True, help_text='주요 기능성')),
                ('standards_and_specifications', models.TextField(blank=True, help_text='기준 및 규격')),
            ],
            options={
                'verbose_name': '건강기능식품',
                'verbose_name_plural': '건강기능식품 목록',
                'db_table': 'dietary_supplements',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='품목명', max_length=255, unique=True)),
                ('functionality', models.TextField(help_text='기능성')),
                ('precautions', models.TextField(blank=True, help_text='섭취 시 주의사항', null=True)),
                ('daily_intake_low', models.DecimalField(blank=True, decimal_places=2, help_text='일일섭취량 하한', max_digits=10, null=True)),
                ('daily_intake_high', models.DecimalField(blank=True, decimal_places=2, help_text='일일섭취량 상한', max_digits=10, null=True)),
                ('unit', models.CharField(blank=True, help_text='일일섭취량 단위', max_length=50)),
                ('remark', models.TextField(blank=True, help_text='비고')),
                ('registration_date', models.DateField(blank=True, help_text='최초 등록일', null=True)),
                ('last_modified_date', models.DateField(blank=True, help_text='최종 수정일', null=True)),
            ],
            options={
                'verbose_name': '원료',
                'verbose_name_plural': '원료 목록',
                'db_table': 'ingredient',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Manufacturer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'verbose_name': '제조사',
                'verbose_name_plural': '제조사 목록',
                'db_table': 'manufacturer',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='DietarySupplementsIngredient',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('content', models.DecimalField(decimal_places=2, help_text='원료 함량', max_digits=10)),
                ('dietary_supplements', models.ForeignKey(help_text='제품 (FK)', on_delete=django.db.models.deletion.CASCADE, to='data_managements.dietarysupplements')),
                ('ingredient', models.ForeignKey(help_text='원료 (FK)', on_delete=django.db.models.deletion.CASCADE, to='data_managements.ingredient')),
            ],
            options={
                'verbose_name': '건강기능식품-원료 관계',
                'verbose_name_plural': '건강기능식품-원료 관계 목록',
                'db_table': 'dietary_supplements_ingredient',
                'ordering': ['dietary_supplements__name', 'ingredient__name'],
                'unique_together': {('dietary_supplements', 'ingredient')},
            },
        ),
        migrations.AddField(
            model_name='dietarysupplements',
            name='ingredients',
            field=models.ManyToManyField(help_text='제품에 포함된 원료 목록 (M:N)', related_name='products', through='data_managements.DietarySupplementsIngredient', to='data_managements.ingredient'),
        ),
        migrations.AddField(
            model_name='dietarysupplements',
            name='manufacturer',
            field=models.ForeignKey(help_text='제품을 제조한 업체명', on_delete=django.db.models.deletion.PROTECT, related_name='products', to='data_managements.manufacturer'),
        ),
        migrations.CreateModel(
            name='UserSupplementIntake',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('intake_amount', models.DecimalField(decimal_places=2, help_text='섭취량', max_digits=10)),
                ('supplement', models.ForeignKey(help_text='섭취 중인 영양제 (FK)', on_delete=django.db.models.deletion.CASCADE, to='data_managements.dietarysupplements')),
                ('user', models.ForeignKey(help_text='사용자 (FK)', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '사용자 섭취 영양제',
                'verbose_name_plural': '사용자 섭취 영양제 목록',
                'db_table': 'user_supplement_intake',
                'unique_together': {('user', 'supplement')},
            },
        ),
    ]
